Problem Statement:-

Our pizza restaurant is working on a new web application designed to run in a Kubernetes cluster. The development team has designed a web service which serves a list of pizza toppings. The team has provided a set of specifications which the pizza topping web service needs in order to run.

We have been asked to create a deployment that meets the app's specifications. Then, we need to expose the application using a NodePort service. This setup should meet the following criteria:

1. All objects should be in the <your-name>-pizza namespace. This namespace already exists in the cluster.
2. The deployment should be named pizza-deployment.
3. The deployment should have 3 replicas.
4. The deployment's pods should have one container using the linuxacademycontent/pizza-service image with the tag 1.14.6.
5. Run the container with the command nginx.
6. Run the container with the arguments "-g", "daemon off;".
7. The pods should expose port 80 to the cluster.
8. The pods should be configured to periodically check the /healthz endpoint on port 8081, and restart automatically if the request fails.
9. The pods should not receive traffic from the service until the / endpoint on port 80 responds successfully.
10. The service should be named pizza-service.
11. The service should forward traffic to port 80 on the pods.
12. The service should be exposed externally by listening on port 30080 on each node.


ubuntu@ip-172-31-42-41:~$ cat test.yml
apiVersion: v1
kind: Namespace
metadata:
  name: venkatesh-pizza

ubuntu@ip-172-31-42-41:~$ kubectl apply -f test.yml
namespace/venkatesh-pizza created

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pizza-deployment
  namespace: venkatesh-pizza
spec:
  replicas: 3
  selector:
    matchLabels:
      app: pizza
  template:
    metadata:
      labels:
        app: pizza
    spec:
      containers:
      - name: pizza
        image: linuxacademycontent/pizza-service:1.14.6
        command: ["nginx"]
        args: ["-g","daemon off;"]
        ports:
        - containerPort: 80
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        readinessProbe:
          httpGet:
            path: /
            port: 80

ubuntu@ip-172-31-42-41:~$ kubectl apply -f pizza-deployment.yml
deployment.apps/pizza-deployment created

---
apiVersion: v1
kind: Service
metadata:
  name: pizza-service
  namespace: venkatesh-pizza
spec:
  type: NodePort
  ports:
  - port: 80
    nodePort: 30080
    protocol: TCP
  selector:
    app: pizza

ubuntu@ip-172-31-42-41:~$ kubectl apply -f pizza-service.yml
service/pizza-service created


ubuntu@ip-172-31-42-41:~$ kubectl get svc -n=venkatesh-pizza
NAME            TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE
pizza-service   NodePort   10.104.215.18   <none>        80:30080/TCP   99s


ubuntu@ip-172-31-42-41:~$ kubectl get pods -n=venkatesh-pizza
NAME                                READY   STATUS              RESTARTS   AGE
pizza-deployment-6dd6d4548c-9j244   0/1     ContainerCreating   0          2m26s
pizza-deployment-6dd6d4548c-fldxq   0/1     ContainerCreating   0          2m26s
pizza-deployment-6dd6d4548c-q4b6z   0/1     ContainerCreating   0          2m26s


NAME                                READY   STATUS        RESTARTS   AGE
pizza-deployment-6dd6d4548c-9j244   0/1     Terminating   0          7m31s
pizza-deployment-6dd6d4548c-fldxq   0/1     Terminating   0          7m31s
pizza-deployment-6dd6d4548c-n5d8t   1/1     Running       0          107s
pizza-deployment-6dd6d4548c-nxpl2   1/1     Running       0          107s
pizza-deployment-6dd6d4548c-q4b6z   0/1     Terminating   0          7m31s
pizza-deployment-6dd6d4548c-xnrvc   1/1     Running       0          107s


ubuntu@ip-172-31-42-41:~$ curl localhost:30080
{
  "description": "A list of pizza toppings.",
  "pizzaToppings": [
    "anchovies",
    "artichoke",
    "bacon",
    "breakfast bacon",
    "Canadian bacon",
    "cheese",
    "chicken",
    "chili peppers",
    "feta",
    "garlic",
    "green peppers",
    "grilled onions",
    "ground beef",
    "ham",
    "hot sauce",
    "meatballs",
    "mushrooms",
    "olives",
    "onions",
    "pepperoni",
    "pineapple",
    "sausage",
    "spinach",
    "sun-dried tomato",
    "tomatoes"
  ]
}




