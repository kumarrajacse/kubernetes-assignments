Learning Objectives:-
Create a PersistentVolume
Create a PersistentVolumeClaim
Create a MySQL Pod configured to use the PersistentVolumeClaim

Problem Statement:-
Your company needs a small database server to support a new application. They have asked you to deploy a pod running a MySQL container, but they want the data to persist even if the pod is deleted or replaced. Therefore, the MySQL database pod requires persistent storage.


You will need to do the following:-

1. Create a PersistentVolume:
	The PersistentVolume should be named mysql-pv.
	The volume needs a capacity of 1Gi.
	Use a storageClassName of localdisk.
	Use the accessMode ReadWriteOnce.
	Store the data locally on the node using a hostPath volume at the location /mnt/data.

2. Create a PersistentVolumeClaim:
	The PersistentVolumeClaim should be named mysql-pv-claim.
	Set a resource request on the claim for 500Mi of storage.
	Use the same storageClassName and accessModes as the PersistentVolume so that this claim can bind to the PersistentVolume.

3. Create a MySQL Pod configured to use the PersistentVolumeClaim:
	The Pod should be named mysql-pod.
	Use the image mysql:5.6.
	Expose the containerPort 3306.
	Set an environment variable called MYSQL_ROOT_PASSWORD with the value password.
	Add the PersistentVolumeClaim as a volume and mount it to the container at the path /var/lib/mysql.

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv 
spec:
  storageClassName: localdisk
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
    


ubuntu@ip-172-31-42-41:~/pv-example$ kubectl create -f pv.yml
persistentvolume/mysql-pv created


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: localdisk
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi

ubuntu@ip-172-31-42-41:~/pv-example$ kubectl create -f pvc.yml
persistentvolumeclaim/mysql-pv-claim created


---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-password
Stringdata:
  password: cGFzc3dvcmQ=

ubuntu@ip-172-31-42-41:~/pv-example$ kubectl create -f secretmsql.yml
secret/mysql-password created


---
apiVersion: v1
kind: Pod
metadata:
  name: mysql-pod
spec:
  containers:
  - name: mysql
    image: mysql:5.6
    ports:
    - containerPort: 3306
    env:
    - name: MYSQL_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mysql-password
          key: password 
    volumeMounts:
    - mountPath: "/var/lib/mysql"
      name: my-storage
  volumes:
  - name: my-storage
    persistentVolumeClaim:
      claimName: mysql-pv-claim

ubuntu@ip-172-31-42-41:~/pv-example$ kubectl apply -f mysql-pod.yml
pod/mysql-pod created


